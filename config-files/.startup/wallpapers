#!/bin/bash

setup(){
	INTERVAL_IN_SECONDS=`expr 2 \* 86400` # Download every 2 days
	QUERIES=(wallpaper amazing funny awesome wonderful space)
	AMOUNT=10
	OUT_DIR=/home/estevao/Pictures/favorite-wallpapers

	LOGS_DIR=`dirname "$0"`/.logs/wallpapers
	CHECKPOINT_FILE=$LOGS_DIR/checkpoint
	SAVED_WALLPAPERS_FILE=$LOGS_DIR/saved_wallpapers

	[[ $1 = force ]] && IS_TO_FORCE_DOWNLOAD=true || IS_TO_FORCE_DOWNLOAD=false
	if [[ ! -d $LOGS_DIR || ! -f $CHECKPOINT_FILE || ! -f $SAVED_WALLPAPERS_FILE ]]; then
		mkdir -p $LOGS_DIR
		echo "0" > $CHECKPOINT_FILE && : > $SAVED_WALLPAPERS_FILE
		IS_TO_FORCE_DOWNLOAD=true
	fi
	PREVIOUS_TIMESTAMP=`cat $CHECKPOINT_FILE`
	CURRENT_TIMESTAMP=`date +%s`
}

is_to_download_now(){
	CURRENT=$1
	PREVIOUS=$2
	[[ $PREVIOUS -gt $CURRENT ]] && echo "ERROR: previous time is greater than current: $PREVIOUS > $CURRENT" >&2 && exit 1

	if [[ `expr $CURRENT - $PREVIOUS` -lt $INTERVAL_IN_SECONDS ]]; then
		return 1 # do not download
	fi
	return 0 # do download
}

echo "Downloading new pictures"
USED_QUERIES=()
for STEP in `seq 1 $STEPS`
do
	while printf '%s\n' ${USED_QUERIES[@]} | egrep "^$QUERY"
	do
		I=`shuf -i 1-$N -n 1`
		QUERY=$(echo "${QUERIES[$I]}")
	done
	USED_QUERIES[$STEP]=$QUERY
	echo "step $STEP, query: ${QUERY}"
	randimg $FOLDER/.tmp -q $QUERY -n `expr $AMOUNT / $STEPS` --show-names >> $PHOTO_NAMES_LOG.tmp
	[ $? != 0 ] && echo "download failed" && HAS_DOWNLOAD_FAILED=true && break
done
if [ $HAS_DOWNLOAD_FAILED ]
then
	rm -rf $FOLDER/.tmp
	rm $PHOTO_NAMES_LOG.tmp
	exit 1
fi
echo "Removing previous pictures"
cat $PHOTO_NAMES_LOG | while read NAME
do
	[ -e $FOLDER/$NAME ] && rm $FOLDER/$NAME || echo "File $FOLDER/$NAME doesn't exists"
done
cp $PHOTO_NAMES_LOG.tmp $PHOTO_NAMES_LOG
rm $PHOTO_NAMES_LOG.tmp
echo "Moving downloaded pictures to correct directory" 
cat $PHOTO_NAMES_LOG | while read NAME
do
	mv $FOLDER/.tmp/$NAME $FOLDER
done
rm -rf $FOLDER/.tmp
echo $CURRENT_DAY > $CHECK_POINT


main(){
	setup
	if [ ! $IS_TO_FORCE_DOWNLOAD ]; then 
		is_to_download_now `date +%s` 
		[ $? = 1 ] && echo "It's not time to download" && exit 0
	fi
}

main